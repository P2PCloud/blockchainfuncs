{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x90a3D4b98BAbB785c03DD54C0f70Ac5Ddc8a0F3D",
    "txHash": "0x2ae1c77e6e9acd4c35658a5f75d887ef2675b3e5f8fd6ed8a154dd28f19ddd5b"
  },
  "proxies": [
    {
      "address": "0x3c7cc0fB895a86761832B37dbA2bDAcd7fCD7704",
      "txHash": "0x242ca5b2eab745cd890665e7ddb693148b64b7c7c06beed8a9881f88388ab225",
      "kind": "transparent"
    },
    {
      "address": "0x305fE6Ca48E8A10C35843FC5D1299B31B8895e36",
      "txHash": "0x9c675027110fd2ebfa2449e7e97aab8092e469bdef1c333caf123a29bf060ba0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "86b6db2319167afb0274652770adfd8c8c8092d189fd10a8c2c7c4cb69e51445": {
      "address": "0x75CFCB686377d5092Aa01135E9C64014C8E8E2F2",
      "txHash": "0x7912eceb4189ffbbb6a17b08f820dd9eab752bd3b06471fc4c14db37b004c8d7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_walletToSigner",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedSigner",
            "src": "contracts/DelegatedSigner.sol:6"
          },
          {
            "label": "_signerToWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedSigner",
            "src": "contracts/DelegatedSigner.sol:7"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32",
            "contract": "VerifiableOffer",
            "src": "contracts/VerifiableOffer.sol:17"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VerifiableOffer",
            "src": "contracts/VerifiableOffer.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "55",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "coin",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IERC20)1291",
            "contract": "BalanceHolder",
            "src": "contracts/BalanceHolder.sol:11"
          },
          {
            "label": "_coinBalance",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BalanceHolder",
            "src": "contracts/BalanceHolder.sol:13"
          },
          {
            "label": "providerInfo",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(ProviderInfo)4191_storage)",
            "contract": "ProviderRegistry",
            "src": "contracts/ProviderRegistry.sol:18"
          },
          {
            "label": "providerList",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProviderRegistry",
            "src": "contracts/ProviderRegistry.sol:19"
          },
          {
            "label": "userProviderAccounting",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage))",
            "contract": "Payments",
            "src": "contracts/Payments.sol:15"
          },
          {
            "label": "_totalSpendingPerMinute",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Payments",
            "src": "contracts/Payments.sol:16"
          },
          {
            "label": "addressToID",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:6"
          },
          {
            "label": "idToAddress",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:7"
          },
          {
            "label": "nextID",
            "offset": 0,
            "slot": "113",
            "type": "t_uint32",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:8"
          },
          {
            "label": "bookingCount",
            "offset": 4,
            "slot": "113",
            "type": "t_uint32",
            "contract": "Broker",
            "src": "contracts/Broker.sol:17"
          },
          {
            "label": "bookings",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint32,t_struct(Booking)3089_storage)",
            "contract": "Broker",
            "src": "contracts/Broker.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1291": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage))": {
            "label": "mapping(address => mapping(address => struct Payments.UserProviderAccounting))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ProviderInfo)4191_storage)": {
            "label": "mapping(address => struct ProviderRegistry.ProviderInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage)": {
            "label": "mapping(address => struct Payments.UserProviderAccounting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Booking)3089_storage)": {
            "label": "mapping(uint32 => struct Broker.Booking)",
            "numberOfBytes": "32"
          },
          "t_struct(Booking)3089_storage": {
            "label": "struct Broker.Booking",
            "members": [
              {
                "label": "specs",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerMinute",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "clientId",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "providerId",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProviderInfo)4191_storage": {
            "label": "struct ProviderRegistry.ProviderInfo",
            "members": [
              {
                "label": "url",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isRegistered",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "feePaid",
                "type": "t_uint128",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserProviderAccounting)4056_storage": {
            "label": "struct Payments.UserProviderAccounting",
            "members": [
              {
                "label": "lastPaymentTs",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerMinute",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a755d2974fe76a5a06f26043c5ed01491933837f90ebafceeb177650c57a79ce": {
      "address": "0x2C98E1a0000b04127Af37111008faa6E75b9acEe",
      "txHash": "0xe183d183f2611ef5dece7cac1a28555dc1ca1ca7fa6a1f2e4bc513928087b019",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_walletToSigner",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedSigner",
            "src": "contracts/DelegatedSigner.sol:6"
          },
          {
            "label": "_signerToWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedSigner",
            "src": "contracts/DelegatedSigner.sol:7"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32",
            "contract": "VerifiableOffer",
            "src": "contracts/VerifiableOffer.sol:17"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "VerifiableOffer",
            "src": "contracts/VerifiableOffer.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "55",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "coin",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IERC20)1291",
            "contract": "BalanceHolder",
            "src": "contracts/BalanceHolder.sol:11"
          },
          {
            "label": "_coinBalance",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BalanceHolder",
            "src": "contracts/BalanceHolder.sol:13"
          },
          {
            "label": "providerInfo",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(ProviderInfo)4191_storage)",
            "contract": "ProviderRegistry",
            "src": "contracts/ProviderRegistry.sol:18"
          },
          {
            "label": "providerList",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProviderRegistry",
            "src": "contracts/ProviderRegistry.sol:19"
          },
          {
            "label": "userProviderAccounting",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage))",
            "contract": "Payments",
            "src": "contracts/Payments.sol:15"
          },
          {
            "label": "_totalSpendingPerMinute",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Payments",
            "src": "contracts/Payments.sol:16"
          },
          {
            "label": "addressToID",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint32)",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:6"
          },
          {
            "label": "idToAddress",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:7"
          },
          {
            "label": "nextID",
            "offset": 0,
            "slot": "113",
            "type": "t_uint32",
            "contract": "AddressBook",
            "src": "contracts/AddressBook.sol:8"
          },
          {
            "label": "bookingCount",
            "offset": 4,
            "slot": "113",
            "type": "t_uint32",
            "contract": "Broker",
            "src": "contracts/Broker.sol:17"
          },
          {
            "label": "bookings",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint32,t_struct(Booking)3089_storage)",
            "contract": "Broker",
            "src": "contracts/Broker.sol:36"
          },
          {
            "label": "usedVouchers",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "FiatMarketplace",
            "src": "contracts/FiatMarketplace.sol:23"
          },
          {
            "label": "voucherSigner",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "FiatMarketplace",
            "src": "contracts/FiatMarketplace.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1291": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage))": {
            "label": "mapping(address => mapping(address => struct Payments.UserProviderAccounting))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ProviderInfo)4191_storage)": {
            "label": "mapping(address => struct ProviderRegistry.ProviderInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserProviderAccounting)4056_storage)": {
            "label": "mapping(address => struct Payments.UserProviderAccounting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Booking)3089_storage)": {
            "label": "mapping(uint32 => struct Broker.Booking)",
            "numberOfBytes": "32"
          },
          "t_struct(Booking)3089_storage": {
            "label": "struct Broker.Booking",
            "members": [
              {
                "label": "specs",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerMinute",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "clientId",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "providerId",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProviderInfo)4191_storage": {
            "label": "struct ProviderRegistry.ProviderInfo",
            "members": [
              {
                "label": "url",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isRegistered",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "feePaid",
                "type": "t_uint128",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserProviderAccounting)4056_storage": {
            "label": "struct Payments.UserProviderAccounting",
            "members": [
              {
                "label": "lastPaymentTs",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerMinute",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
